name: 'All tests'
on: [pull_request, push]


jobs:

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Install valgrind
      run: sudo apt install valgrind

    - name: Install googletest
      run: sudo apt-get install libgtest-dev

    - name: Install gcovr
      run: sudo apt install gcovr

    - name: Install cppcheck
      run: sudo apt-get install cppcheck -y

    - name: Make coverage directory
      run: mkdir coverage  

    - name: Make consist
      run: mkdir build_c && cd build_c && cmake .. && make

    - name: Run cppcheck
      run: cppcheck --enable=all --suppress=missingIncludeSystem --language=c *.c

    - name: Run Valgrind
      run: cd build_c && valgrind --error-exitcode=1 ./lib_test

    - name: Tests
      run: |
          cd build_c
          ./lib_test
          cd ..
          gcovr -r . --exclude build_c/ --exclude main.c --html --html-details -o coverage/coverage_consist.html

    - name: Make parallel
      run: mkdir build_p && cd build_p && cmake .. -DUSE_STATIC=OFF && make

    - name: Run cppcheck
      run: cppcheck --enable=all --suppress=missingIncludeSystem --language=c *.c

    - name: Run Valgrind
      run: cd build_p && valgrind --error-exitcode=1 ./lib_test

    - name: Tests
      run: |
          cd build_p
          ./lib_test
          cd ..
          gcovr -r . --exclude build_c/ --exclude build_p/ --exclude main.c --html --html-details -o coverage/coverage_parallel.html

    - name: Archive code coverage results
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage-report
        path: coverage/

    - name: Run clang-format style check
      uses: DoozyX/clang-format-lint-action@v0.12
      with:
        source: '.'
        exclude: './build_c ./build_p ./github ./vscode ./CMakeModules ./idea'
        extensions: 'h,cpp,c'
        clangFormatVersion: 12
        style: google
